#include "Accounts.h"

EXEC SQL WHENEVER SQLWARNING SQLPRINT;
EXEC SQL WHENEVER SQLERROR SQLPRINT;
EXEC SQL WHENEVER NOT FOUND CONTINUE;

void CreateAccountsTable()
{
    EXEC SQL CREATE EXTENSION IF NOT EXISTS pgcrypto;

    EXEC SQL CREATE TABLE Accounts
    (
        AccountId            serial      PRIMARY KEY,
        Nickname             varchar(20) NOT NULL UNIQUE,
        RegistrationDateTime timestamp   NOT NULL DEFAULT current_timestamp,
        LoginDateTime        timestamp,
        PasswordHash         char(34)    NOT NULL
    );

    EXEC SQL COMMIT;
}

void DropAccountsTable()
{
    EXEC SQL DROP TABLE IF EXISTS Accounts CASCADE;

    EXEC SQL COMMIT;
}

void Register(char* login, char* password)
{
    EXEC SQL BEGIN DECLARE SECTION;
    char* login_ = login;
    char* password_ = password;
    EXEC SQL END DECLARE SECTION;

    EXEC SQL INSERT INTO Accounts (Nickname, PasswordHash) VALUES (:login_, crypt(:password_, gen_salt('md5')));

    EXEC SQL COMMIT;
}

bool Login(char* login, char* password)
{
    EXEC SQL BEGIN DECLARE SECTION;
    char* login_ = login;
    char* password_ = password;
    bool res = false;
    EXEC SQL END DECLARE SECTION;

    EXEC SQL SELECT (PasswordHash = crypt(:password_, PasswordHash)) INTO :res FROM Accounts WHERE Nickname = :login_;

    if (res)
    {
        EXEC SQL UPDATE Accounts SET LoginDateTime = current_timestamp WHERE Nickname = :login_;
    }

    EXEC SQL COMMIT;
    return res;
}
