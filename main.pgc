#include <stdio.h>
#include <stdbool.h>
#include <malloc.h>
#include <time.h>
#include <stdlib.h>

#include <pgtypes.h>
#include <pgtypes_timestamp.h>
#include <ecpglib.h>
#include <ecpgerrno.h>
#include <sqlca.h>

#include "IO.h"
#include "Dialogs.h"
#include "Accounts.h"
#include "Context.h"
#include "Messages.h"
#include "Locks.h"

EXEC SQL WHENEVER SQLWARNING SQLPRINT;
EXEC SQL WHENEVER SQLERROR SQLPRINT;

int main(int argc, char** argv)
{
    srand(time(NULL));

    EXEC SQL WHENEVER NOT FOUND CONTINUE;

    EXEC SQL BEGIN DECLARE SECTION;
    char *target = "tcp:postgresql://localhost:5432/demo";
    char *target1 = "tcp:postgresql://192.168.66.1:5432/demo";
    char *user = "postgres";
    char *password = "qwerty123";
    char *password1 = "zasxcd123";
    char *connection = "connection";
    char *connection1 = "connection1";
    char ver[256];
    EXEC SQL END DECLARE SECTION;

    EXEC SQL CONNECT TO :target AS :connection USER :user IDENTIFIED BY :password;
    //EXEC SQL CONNECT TO :target1 AS :connection1 USER :user IDENTIFIED BY :password1;

    EXEC SQL AT :connection SELECT version() INTO :ver;
    printf("version: %s\n", ver);

    //EXEC SQL AT :connection1 SELECT version() INTO :ver;
    //printf("version: %s\n", ver);

    EXEC SQL SET CONNECTION :connection;

    int a;
    scanf("%d", &a);

    if (a == -2)
    {
        printf("Введите IP сервера базы данных [localhost]: ");
        printf("Введите порт сервера базы данных [5432]: ");
        printf("Введите название базы данных [dbmessenger]: ");
        printf("Введите пользователя базы данных [postgres]: ");
        printf("Введите пароль пользователя базы данных [qwerty123]: ");
        printf("Введите логин [User1]: ");
        printf("Введите пароль [qwerty]: ");

    }
    if (a == -1)
    {
        EnsureCreated();
    }
    if (a == 0)
    {
        EnsureCreated();
        Register("qwerty", "123456");
        Register("Vladislav213", "123456");
        CreateDialog("Vladislav213", "qwerty");
    }
    if (a == 1)
    {
        Drop();
    }
    if (a == 2)
    {
        Register("Vladislav213", "123456");
    }
    if (a == 2123)
    {
        Register("qwerty", "123456");
    }
    if (a == 3)
    {
        Login("Vladislav213", "1234516");
    }
    if (a == 10)
    {
        Lock("qwerty5", 1);
    }
    if (a == 11)
    {
        Wait("qwerty5");
    }
    if (a == 12)
    {
        Unlock("lockname");
        Unlock("lockname1");
    }
    if (a == 20)
    {
        Lock("qwerty3", 1);
    }
    if (a == 21)
    {
        Wait("qwerty3");
    }
    if (a == 22)
    {
        Unlock("qwerty3");
    }
    if (a == 30)
    {
        CreateLocksTrigger();
    }
    if (a == 40)
    {
        CreateDialog("Vladislav213", "qwerty");
    }
    if (a == 50)
    {
        int c = GetDialogsCount("Vladislav213");
        int* a = (int*) malloc(c * sizeof(int));
        GetDialogs("Vladislav213", a);
        for (int i = 0; i < c; i++)
        {
            printf("%d ", a[i]);
        }
        free(a);
    }
    if (a == 60)
    {
        char name1[1000];
        char name2[1000];

        GetDialogTwoMembers(1, name1, name2);

        printf("%s %s ", name1, name2);
    }
    if (a == 70)
    {
        timestamp t = PGTYPEStimestamp_from_asc("1999-01-08 04:05:06", NULL);
        OutputMessage("daddad", "dasdasdadad", t);
    }
    if (a == 80)
    {
        SendMessage(1, 1, "message5");
    }
    if (a == 90)
    {
        ReceiveMessage(1);
    }
    if (a == 100)
    {
        StartReceivingMessages(1, 5);
    }
    if (a == 110)
    {
        GetPrintMessages(1, -1);
    }
    if (a == 120)
    {
        StartSendingMessages(1, 1);
    }

    return 0;
}
